<main class="container mt-4">
  <h1 class="text-center mb-4">Add New Inventory Item</h1>
  
  <% if (message) { %>
    <div class="alert alert-<%= message.type || 'info' %>">
      <%- message.text %>
    </div>
  <% } %>
  
  <% if (errors && errors.length > 0) { %>
    <div class="alert alert-danger">
      <ul class="mb-0">
        <% errors.forEach(error => { %>
          <li><%= error.msg %></li>
        <% }) %>
      </ul>
    </div>
  <% } %>
  
  <div class="row justify-content-center">
    <div class="col-lg-8">
      <div class="card">
        <div class="card-body">
          <form action="/inv/add-inventory" method="post" id="inventoryForm">
            <!-- Classification -->
            <div class="mb-3">
              <label for="classification_id" class="form-label">Classification</label>
              <%- classificationList %>
              <div class="invalid-feedback">Please select a classification.</div>
            </div>
            
            <!-- Make -->
            <div class="mb-3">
              <label for="inv_make" class="form-label">Make</label>
              <input 
                type="text" 
                class="form-control <%= errors && errors.some(e => e.param === 'inv_make') ? 'is-invalid' : '' %>" 
                id="inv_make" 
                name="inv_make" 
                required
                value="<%= inv_make || '' %>"
              >
              <div class="invalid-feedback">Please provide a make.</div>
            </div>
            
            <!-- Model -->
            <div class="mb-3">
              <label for="inv_model" class="form-label">Model</label>
              <input 
                type="text" 
                class="form-control <%= errors && errors.some(e => e.param === 'inv_model') ? 'is-invalid' : '' %>" 
                id="inv_model" 
                name="inv_model" 
                required
                value="<%= inv_model || '' %>"
              >
              <div class="invalid-feedback">Please provide a model.</div>
            </div>
            
            <!-- Year -->
            <div class="mb-3">
              <label for="inv_year" class="form-label">Year</label>
              <input 
                type="number" 
                class="form-control <%= errors && errors.some(e => e.param === 'inv_year') ? 'is-invalid' : '' %>" 
                id="inv_year" 
                name="inv_year" 
                min="1900"
                max="<%= new Date().getFullYear() + 1 %>"
                required
                value="<%= inv_year || '' %>"
              >
              <div class="invalid-feedback">Please provide a valid year between 1900 and <%= new Date().getFullYear() + 1 %>.</div>
            </div>
            
            <!-- Description -->
            <div class="mb-3">
              <label for="inv_description" class="form-label">Description</label>
              <textarea 
                class="form-control <%= errors && errors.some(e => e.param === 'inv_description') ? 'is-invalid' : '' %>" 
                id="inv_description" 
                name="inv_description" 
                rows="3"
                required
              ><%= inv_description || '' %></textarea>
              <div class="invalid-feedback">Please provide a description.</div>
            </div>
            
            <!-- Image Path -->
            <div class="mb-3">
              <label for="inv_image" class="form-label">Image Path</label>
              <input 
                type="text" 
                class="form-control <%= errors && errors.some(e => e.param === 'inv_image') ? 'is-invalid' : '' %>" 
                id="inv_image" 
                name="inv_image" 
                value="<%= inv_image || '/images/vehicles/no-image.png' %>"
                required
              >
              <div class="form-text">Path to the vehicle image (e.g., /images/vehicles/vehicle-1.jpg)</div>
              <div class="invalid-feedback">Please provide an image path.</div>
            </div>
            
            <!-- Thumbnail Path -->
            <div class="mb-3">
              <label for="inv_thumbnail" class="form-label">Thumbnail Path</label>
              <input 
                type="text" 
                class="form-control <%= errors && errors.some(e => e.param === 'inv_thumbnail') ? 'is-invalid' : '' %>" 
                id="inv_thumbnail" 
                name="inv_thumbnail" 
                value="<%= inv_thumbnail || '/images/vehicles/no-image-tn.png' %>"
                required
              >
              <div class="form-text">Path to the vehicle thumbnail (e.g., /images/vehicles/vehicle-1-tn.jpg)</div>
              <div class="invalid-feedback">Please provide a thumbnail path.</div>
            </div>
            
            <!-- Price -->
            <div class="mb-3">
              <label for="inv_price" class="form-label">Price</label>
              <div class="input-group">
                <span class="input-group-text">$</span>
                <input 
                  type="number" 
                  class="form-control <%= errors && errors.some(e => e.param === 'inv_price') ? 'is-invalid' : '' %>" 
                  id="inv_price" 
                  name="inv_price" 
                  step="0.01"
                  min="0"
                  required
                  value="<%= inv_price || '' %>"
                >
              </div>
              <div class="invalid-feedback">Please provide a valid price (must be 0 or greater).</div>
            </div>
            
            <!-- Miles -->
            <div class="mb-3">
              <label for="inv_miles" class="form-label">Miles</label>
              <input 
                type="number" 
                class="form-control <%= errors && errors.some(e => e.param === 'inv_miles') ? 'is-invalid' : '' %>" 
                id="inv_miles" 
                name="inv_miles" 
                min="0"
                required
                value="<%= inv_miles || '' %>"
              >
              <div class="invalid-feedback">Please provide a valid mileage (must be 0 or greater).</div>
            </div>
            
            <!-- Color -->
            <div class="mb-3">
              <label for="inv_color" class="form-label">Color</label>
              <input 
                type="text" 
                class="form-control <%= errors && errors.some(e => e.param === 'inv_color') ? 'is-invalid' : '' %>" 
                id="inv_color" 
                name="inv_color" 
                required
                value="<%= inv_color || '' %>"
              >
              <div class="invalid-feedback">Please provide a color.</div>
            </div>
            
            <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
              <button type="submit" class="btn btn-primary me-md-2">Add Vehicle</button>
              <a href="/inv" class="btn btn-secondary">Cancel</a>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</main>

<%- include('../../views/partials/footer') %>

<script>
// Form validation
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('inventoryForm');
  if (!form) return;
  
  // Add validation on form submission
  form.addEventListener('submit', function(event) {
    let isValid = true;
    
    // Reset all invalid states
    const invalidInputs = form.querySelectorAll('.is-invalid');
    invalidInputs.forEach(input => input.classList.remove('is-invalid'));
    
    // Validate required fields
    const requiredFields = form.querySelectorAll('[required]');
    requiredFields.forEach(field => {
      if (!field.value.trim()) {
        field.classList.add('is-invalid');
        if (isValid) field.focus();
        isValid = false;
      }
    });
    
    // Validate year
    const yearInput = document.getElementById('inv_year');
    if (yearInput && yearInput.value) {
      const year = parseInt(yearInput.value);
      const currentYear = new Date().getFullYear();
      if (isNaN(year) || year < 1900 || year > currentYear + 1) {
        yearInput.classList.add('is-invalid');
        if (isValid) yearInput.focus();
        isValid = false;
      }
    }
    
    // Validate price
    const priceInput = document.getElementById('inv_price');
    if (priceInput && priceInput.value) {
      const price = parseFloat(priceInput.value);
      if (isNaN(price) || price < 0) {
        priceInput.classList.add('is-invalid');
        if (isValid) priceInput.focus();
        isValid = false;
      }
    }
    
    // Validate miles
    const milesInput = document.getElementById('inv_miles');
    if (milesInput && milesInput.value) {
      const miles = parseInt(milesInput.value);
      if (isNaN(miles) || miles < 0) {
        milesInput.classList.add('is-invalid');
        if (isValid) milesInput.focus();
        isValid = false;
      }
    }
    
    if (!isValid) {
      event.preventDefault();
      // Scroll to the first invalid field
      const firstInvalid = form.querySelector('.is-invalid');
      if (firstInvalid) {
        firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
      }
    }
  });
  
  // Remove invalid class when user starts typing
  const inputs = form.querySelectorAll('input, textarea, select');
  inputs.forEach(input => {
    input.addEventListener('input', function() {
      if (this.classList.contains('is-invalid')) {
        this.classList.remove('is-invalid');
      }
    });
  });
});
</script>
